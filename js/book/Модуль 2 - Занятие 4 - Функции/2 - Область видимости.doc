Область видимости (scope) - механизм который определяет доступность переменных в исполняемом коде.

Цепочка областей видимости(scope chain) - области видимости образуют иерархию, так что дочерние области имеют доступ к переменным из родительских областей, но не наоборот.

====== Глобальная область видимости ======
Переменные, объявленные на самом верхнем уровне, то есть вне любых конструкций вроде if, while, for и функций, находятся в глобальной области видимости и доступны везде после их объявления.
const globalValue = 10;

console.log(globalValue); // 10

function foo() {
  console.log(globalValue); // 10
}

for (let i = 0; i < 5; i++) {
  console.log(globalValue); // 10

  if (i === 2) {
    console.log(globalValue); // 10
  }
}

====== Блочная область видимости ======
Переменные, объявленные внутри инструкций if, for, функций и других блоков кода обрамлённых фигурными скобками { }, находятся в блочной области видимости и доступны только внутри этого блока кода или вложенных в него.
function foo() {
  const a = 20;
  console.log(a); // 20

  for (let i = 0; i < 5; i++) {
    console.log(a); // 20

    if (i === 2) {
      console.log(a); // 20
    }
  }
}

// ❌ Ошибка! Переменная a не доступна в глобальной области видимости
console.log(a);

for (let i = 0; i < 3; i++) {
  // ❌ Ошибка! Переменная a не доступна в этой области видимости
  console.log(a);
}
------
for (let i = 0; i < 5; i++) {
  const a = 20;
  console.log(a); // 20

  if (i === 2) {
    const b = 30;
    console.log(a); // 20
    console.log(b); // 30
  }

  if (i === 3) {
    console.log(a); // 20

    // ❌ Ошибка! Переменная b не доступна в этой области видимости
    console.log(b);
  }
}

