===Переменные и типы===
{/* < ключевое_слово > <имя_переменной> = <значение></значение>; */}
---
===Имена переменных===
Например, user, greetUser, getUserData, isActive, activeGuestCount, totalWorkerSalary.
---        
===Объявление переменных===
Переменные, объявленные как const, обязательно должны быть инициализированы
значением во время объявления, иначе будет ошибка.
---
const yearOfBirth = 2006;
console.log(yearOfBirth); // 2006
---
Если переменная объявлена как const, перезаписать ее значение нельзя.
При попытке присвоить новое значение будешь ошибка выполнения скрипта.
---
yearOfBirth = 2020; // ❌ Неправильно, будет ошибка
---
Для того, чтобы объявить переменную, 
которой в будущем можно будет присвоить новое значение, 
используется ключевое слово let.
Переменным, объявленным через let, 
не обязательно сразу присваивать значение.
---
let age;
---
Если переменной, объявленной как let, изначально не присвоено значение,
она инициализируется специальным значением undefined (не определено).
---
console.log(age); // undefined
---
console.log() это метод для вывода данных в консоль браузера,
более детально с ним познакомимся позже.
---

// Если переменная объявлена как let, её значение можно перезаписать.
age = 14;
console.log(age); // 14

======Когда использовать const и let======
Используйте const по умолчанию, большинство переменных будут объявлены именно так.
Используйте let если потребуется присвоить переменной другое значение во время выполнения скрипта.

======константы и КОНСТАНТЫ======
// Константа хранящая значение цвета
const COLOR_TEAL = "#009688";
======
// Константа хранящая сообщение о результате логина
const LOGIN_SUCCESS_MESSAGE = "Добро пожаловать!";

======Обращение к переменной======
let username;
console.log(username);
=======
// ❌ Неправильно, будет ошибка
age = 15; // ReferenceError: Cannot access 'age' before initialization
console.log(age); // ReferenceError: age is not defined

// Объявление переменной age
let age = 20;

// ✅ Правильно, обращаемся после объявления
age = 25;
console.log(age); // 25

======Примитивные типы======
Number - целые числа и числа с плавающей запятой (точкой).
const age = 20;
const points = 15.8;
======
String - строки, последовательность из нуля или более символов. Строка начинается и заканчивается одиночной ', или двойными кавычками ".
const username = "Mango";
const description = "JavaSript для начинающих";
======
Boolean - логический тип данных, флаги состояния. Всего два значения: true и false. Например, на вопрос включен ли свет в комнате можно ответить да (true) или нет (false).
true — да, верно, истина, 1
false — нет, неверно, ложь, 0
const isLoggedIn = true;
const canMerge = false;
const hasChildren = true;
const isModalOpen = false;
======
null - особое значение, которое по сути значит ничто. Используется в тех ситуациях, когда необходимо явно указать пустоту. К примеру если пользователь ещё ничего не выбрал, то можно сказать что значение null.
let selectedProduct = null;
======
undefined - ещё одно специальное значение. По умолчанию, когда переменная объявляется, но не инициализируется, ее значение не определено, ей присваивается undefined.
let username;
console.log(username); // undefined

======Оператор typeof======
Используется для получения типа значения переменной. Возвращает на место своего вызова тип значения переменной указанного после него - строку в которой указан тип.
let username;
console.log(typeof username); // "undefined"
------
let inputValue = null;
console.log(typeof inputValue); // "object"
------
const quantity = 17;
console.log(typeof quantity); // "number"
------
const message = "JavaScript is awesome!";
console.log(typeof message); // "string"
------
const isSidebarOpen = false;
console.log(typeof isSidebarOpen); // "boolean"



